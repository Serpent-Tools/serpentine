[package]
name = "serpentine"
version = "0.1.0"
edition = "2024"
readme = "README.md"
description = "Node based build system written in rust."
license = "MIT"
keywords = ["docker", "containers", "build-system", "testing", "CI"]
categories = ["command-line-utilities", "compilers", "development-tools::build-utils", "development-tools::testing", "virtualization"]
repository = "https://github.com/Serpent-Tools/serpentine"

[dependencies]
bollard = { version = "0.19.3", default-features = false, features = ["http", "pipe"] }
clap = { version = "4.5.47", features = ["derive"] }
directories = { version = "6.0.0", default-features = false }
fern = { version = "0.7.1", default-features = false }
futures-util = { version = "0.3.31", default-features = false, features = ["alloc"] }
ignore = "0.4.23"
log = "0.4.28"
miette = { version = "7.6.0", features = ["fancy"] }
ratatui = "0.29.0"
shell-words = "1.1.0"
smallvec = { version = "1.15.1", features = ["union"] }
tar = "0.4.44"
thiserror = "2.0.16"
tokio = { version = "1.47.1", default-features = false, features = ["rt", "sync", "macros", "time", "test-util", "signal"] }
tokio-util = { version = "0.7.16", default-features = false, features = ["io"] }
uuid = { version = "1.18.1", features = ["v4"] }

[dev-dependencies]
insta = { version = "1.43.2", features = ["filters"] }
proptest = { version = "1.8.0", features = ["attr-macro"] }
proptest-derive = "0.6.0"
rstest = "0.26.1"
test-log = "0.2.18"

[features]
default = []

[profile.release]
opt-level = 3
codegen-units = 1
lto = "fat"
panic = "abort"
strip = "symbols"

[lints.rust]
missing_docs = "warn"
unfulfilled_lint_expectations = "warn"
unsafe_code = "forbid"
non_ascii_idents = "deny"

[lints.clippy]
pedantic = {level = "warn", priority = 1}
allow_attributes = "deny"
allow_attributes_without_reason = "deny"

# robust code
todo = "deny"
unreachable = "deny"
unimplemented = "deny"
unwrap_used = "deny"
indexing_slicing = "deny"
dbg_macro = "deny"
expect_used = "deny"
arithmetic_side_effects = "deny"
exit = "deny"
string_slice = "deny"
undocumented_unsafe_blocks = "deny"
missing_docs_in_private_items = "warn"
panic = { level = "deny", priority = 0 }

# niche stuff
assertions_on_result_states = "warn"
cargo_common_metadata = "warn"
cfg_not_test = "warn"
clone_on_ref_ptr = "warn"
empty_drop = "deny"
empty_enum_variants_with_brackets = "warn"
field_scoped_visibility_modifiers = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
infinite_loop = "warn"
lossy_float_literal = "warn"
missing_assert_message = "warn"
mixed_read_write_in_expression = "warn"
module_name_repetitions = "warn"
multiple_unsafe_ops_per_block = "warn"
mutex_atomic = "warn"
needless_raw_strings = "warn"
negative_feature_names = "warn"
partial_pub_fields = "warn"
pathbuf_init_then_push = "warn"
precedence_bits = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_feature_names = "warn"
redundant_test_prefix = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
same_name_method = "warn"
self_named_module_files = "deny"
shadow_unrelated = "warn"
single_char_lifetime_names = "warn"
str_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "deny"
try_err = "warn"
unneeded_field_pattern = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_dependencies = "deny"
min_ident_chars = "warn"

